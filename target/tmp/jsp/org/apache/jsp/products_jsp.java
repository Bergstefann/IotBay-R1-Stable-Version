/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.46.v20220331
 * Generated at: 2025-05-20 03:54:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.User;
import model.Product;
import java.util.List;
import model.User;

public final class products_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1747653806114L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1747711493852L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Product");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <title>Products - IoTBay</title>\r\n");
      out.write("        <link href=\"css.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("        <style>\r\n");
      out.write("            .search-container {\r\n");
      out.write("                display: flex;\r\n");
      out.write("                justify-content: center;\r\n");
      out.write("                margin-bottom: 2rem;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .search-container form {\r\n");
      out.write("                display: flex;\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                max-width: 600px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .search-container input {\r\n");
      out.write("                flex: 1;\r\n");
      out.write("                padding: 10px;\r\n");
      out.write("                border: 1px solid #ccc;\r\n");
      out.write("                border-radius: 4px 0 0 4px;\r\n");
      out.write("                font-size: 16px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .search-container button {\r\n");
      out.write("                background-color: #F96E46;\r\n");
      out.write("                color: white;\r\n");
      out.write("                border: none;\r\n");
      out.write("                padding: 0 20px;\r\n");
      out.write("                border-radius: 0 4px 4px 0;\r\n");
      out.write("                cursor: pointer;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .category-filter {\r\n");
      out.write("                margin-bottom: 1.5rem;\r\n");
      out.write("                display: flex;\r\n");
      out.write("                justify-content: center;\r\n");
      out.write("                flex-wrap: wrap;\r\n");
      out.write("                gap: 10px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .category-filter button {\r\n");
      out.write("                background-color: #f0f0f0;\r\n");
      out.write("                border: none;\r\n");
      out.write("                padding: 8px 15px;\r\n");
      out.write("                border-radius: 20px;\r\n");
      out.write("                cursor: pointer;\r\n");
      out.write("                transition: background-color 0.3s;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .category-filter button:hover, .category-filter button.active {\r\n");
      out.write("                background-color: #F96E46;\r\n");
      out.write("                color: white;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .no-products {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                padding: 2rem;\r\n");
      out.write("                background-color: #f9f9f9;\r\n");
      out.write("                border-radius: 8px;\r\n");
      out.write("                margin-top: 2rem;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .product-card .btn {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                margin-top: 10px;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("\r\n");
      out.write("    <body>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
    // Get user from session if it exists
    User headerUser = (User) session.getAttribute("user"); 

      out.write("\r\n");
      out.write("\r\n");
      out.write("<header style=\"background-color: #333; color: white; padding: 10px 0; display: flex; justify-content: space-between; align-items: center;\">\r\n");
      out.write("    <div style=\"margin-left: 20px;\">\r\n");
      out.write("        <h1>IoTBay</h1>\r\n");
      out.write("    </div>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul style=\"display: flex; list-style: none; margin-right: 20px;\">\r\n");
      out.write("            <li style=\"margin-left: 20px;\"><a href=\"index.jsp\" style=\"color: white; text-decoration: none;\">Home</a></li>\r\n");
      out.write("            <li style=\"margin-left: 20px;\"><a href=\"products.jsp\" style=\"color: white; text-decoration: none;\">Products</a></li>\r\n");
      out.write("            \r\n");
      out.write("            ");
 if (headerUser != null) { 
      out.write("\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><span style=\"color: white;\">Welcome, ");
      out.print( headerUser.getFirstName() );
      out.write("</span></li>\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"LogoutServlet\" style=\"color: white; text-decoration: none;\">Logout</a></li>\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"account.jsp\" style=\"color: white; text-decoration: none;\">My Account</a></li>\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"login.jsp\" style=\"color: white; text-decoration: none;\">Login</a></li>\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"register.jsp\" style=\"color: white; text-decoration: none;\">Register</a></li>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <li style=\"margin-left: 20px;\"><a href=\"cart.jsp\" style=\"color: white; text-decoration: none;\">Cart</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <main>\r\n");
      out.write("            <h1>Products</h1>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"search-container\">\r\n");
      out.write("                <form action=\"ProductServlet\" method=\"get\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"search\">\r\n");
      out.write("                    <input type=\"text\" name=\"query\" placeholder=\"Search products...\" \r\n");
      out.write("                           value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.searchQuery != null ? requestScope.searchQuery : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    <button type=\"submit\">Search</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"category-filter\">\r\n");
      out.write("                <button class=\"active\">All</button>\r\n");
      out.write("                <button>Smart Home</button>\r\n");
      out.write("                <button>Security</button>\r\n");
      out.write("                <button>Lighting</button>\r\n");
      out.write("                <button>Speakers</button>\r\n");
      out.write("                <button>Sensors</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            ");

                // Get products from request attribute (set by ProductServlet)
                List<Product> products = (List<Product>) request.getAttribute("products");
                
                // If products is null, redirect to the servlet to get products
                if (products == null) {
                    response.sendRedirect("ProductServlet?action=list");
                    return;
                }
                
                // Display message if no products found
                if (products.isEmpty()) {
            
      out.write("\r\n");
      out.write("                <div class=\"no-products\">\r\n");
      out.write("                    <h3>No products found</h3>\r\n");
      out.write("                    ");
 if (request.getAttribute("searchQuery") != null) { 
      out.write("\r\n");
      out.write("                        <p>No products match your search query: '");
      out.print( request.getAttribute("searchQuery") );
      out.write("'</p>\r\n");
      out.write("                        <p><a href=\"ProductServlet?action=list\">View all products</a></p>\r\n");
      out.write("                    ");
 } else { 
      out.write("\r\n");
      out.write("                        <p>There are currently no products available.</p>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("                <div class=\"product-grid\">\r\n");
      out.write("                    ");
 for (Product product : products) { 
      out.write("\r\n");
      out.write("                        <div class=\"product-card\">\r\n");
      out.write("                            <img src=\"resources/images/");
      out.print( product.getImageUrl() );
      out.write("\" alt=\"");
      out.print( product.getName() );
      out.write("\" \r\n");
      out.write("                                 class=\"product-image\" onerror=\"this.src='resources/images/product-placeholder.jpg'\">\r\n");
      out.write("                            <div class=\"product-info\">\r\n");
      out.write("                                <h3 class=\"product-title\">");
      out.print( product.getName() );
      out.write("</h3>\r\n");
      out.write("                                <p class=\"product-price\">");
      out.print( product.getFormattedPrice() );
      out.write("</p>\r\n");
      out.write("                                <p class=\"product-description\">");
      out.print( product.getShortDescription(100) );
      out.write("</p>\r\n");
      out.write("                                <a href=\"ProductServlet?action=view&id=");
      out.print( product.getProductID() );
      out.write("\" class=\"btn\">View Details</a>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </main>\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\n");
      out.write("<footer>\n");
      out.write("    <div class=\"footer-content\">\n");
      out.write("        &copy; 2025 IoTBay. All rights reserved. | <a href=\"https://github.com/xJessD/iotbay\">GitHub Project Repo</a>             \n");
      out.write("    </div>\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <script>\r\n");
      out.write("            // JavaScript for category filter buttons\r\n");
      out.write("            document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("                const filterButtons = document.querySelectorAll('.category-filter button');\r\n");
      out.write("                \r\n");
      out.write("                filterButtons.forEach(button => {\r\n");
      out.write("                    button.addEventListener('click', function() {\r\n");
      out.write("                        // Remove active class from all buttons\r\n");
      out.write("                        filterButtons.forEach(btn => btn.classList.remove('active'));\r\n");
      out.write("                        \r\n");
      out.write("                        // Add active class to clicked button\r\n");
      out.write("                        this.classList.add('active');\r\n");
      out.write("                        \r\n");
      out.write("                        // In a real application, this would filter products\r\n");
      out.write("                        // For this demo, we're just changing the visual state\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
