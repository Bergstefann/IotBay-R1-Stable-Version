/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.46.v20220331
 * Generated at: 2025-05-21 05:01:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.User;
import model.Shipment;
import java.util.List;
import java.text.SimpleDateFormat;
import model.User;

public final class shipment_002dsearch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1747653806114L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1747711493852L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Shipment");
    _jspx_imports_classes.add("model.User");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <title>Search Shipments - IoTBay</title>\r\n");
      out.write("        <link href=\"css.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("        <style>\r\n");
      out.write("            .search-container {\r\n");
      out.write("                background-color: white;\r\n");
      out.write("                padding: 2rem;\r\n");
      out.write("                border-radius: 8px;\r\n");
      out.write("                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("                margin-bottom: 2rem;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .search-header {\r\n");
      out.write("                margin-bottom: 1.5rem;\r\n");
      out.write("                padding-bottom: 1rem;\r\n");
      out.write("                border-bottom: 1px solid #eee;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .search-form {\r\n");
      out.write("                display: flex;\r\n");
      out.write("                flex-wrap: wrap;\r\n");
      out.write("                gap: 15px;\r\n");
      out.write("                margin-bottom: 1.5rem;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .form-group {\r\n");
      out.write("                flex: 1;\r\n");
      out.write("                min-width: 250px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .form-actions {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                display: flex;\r\n");
      out.write("                justify-content: flex-end;\r\n");
      out.write("                margin-top: 1rem;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .results-container {\r\n");
      out.write("                background-color: white;\r\n");
      out.write("                padding: 2rem;\r\n");
      out.write("                border-radius: 8px;\r\n");
      out.write("                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .results-header {\r\n");
      out.write("                margin-bottom: 1.5rem;\r\n");
      out.write("                padding-bottom: 1rem;\r\n");
      out.write("                border-bottom: 1px solid #eee;\r\n");
      out.write("                display: flex;\r\n");
      out.write("                justify-content: space-between;\r\n");
      out.write("                align-items: center;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .shipment-table {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                border-collapse: collapse;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .shipment-table th,\r\n");
      out.write("            .shipment-table td {\r\n");
      out.write("                padding: 0.8rem;\r\n");
      out.write("                text-align: left;\r\n");
      out.write("                border-bottom: 1px solid #eee;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .shipment-table th {\r\n");
      out.write("                background-color: #f5f5f5;\r\n");
      out.write("                font-weight: bold;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .status-badge {\r\n");
      out.write("                display: inline-block;\r\n");
      out.write("                padding: 0.25rem 0.5rem;\r\n");
      out.write("                border-radius: 4px;\r\n");
      out.write("                font-size: 0.8rem;\r\n");
      out.write("                font-weight: bold;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .status-pending {\r\n");
      out.write("                background-color: #ffc107;\r\n");
      out.write("                color: #212529;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .status-processing {\r\n");
      out.write("                background-color: #17a2b8;\r\n");
      out.write("                color: white;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .status-shipped {\r\n");
      out.write("                background-color: #28a745;\r\n");
      out.write("                color: white;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .status-delivered {\r\n");
      out.write("                background-color: #6c757d;\r\n");
      out.write("                color: white;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .status-cancelled {\r\n");
      out.write("                background-color: #dc3545;\r\n");
      out.write("                color: white;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .empty-results {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                padding: 3rem;\r\n");
      out.write("                background-color: #f9f9f9;\r\n");
      out.write("                border-radius: 8px;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("\r\n");
      out.write("    <body>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
    // Get user from session if it exists
    User headerUser = (User) session.getAttribute("user"); 

      out.write("\r\n");
      out.write("\r\n");
      out.write("<header style=\"background-color: #333; color: white; padding: 10px 0; display: flex; justify-content: space-between; align-items: center;\">\r\n");
      out.write("    <div style=\"margin-left: 20px;\">\r\n");
      out.write("        <h1>IoTBay</h1>\r\n");
      out.write("    </div>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul style=\"display: flex; list-style: none; margin-right: 20px;\">\r\n");
      out.write("            <li style=\"margin-left: 20px;\"><a href=\"index.jsp\" style=\"color: white; text-decoration: none;\">Home</a></li>\r\n");
      out.write("            <li style=\"margin-left: 20px;\"><a href=\"products.jsp\" style=\"color: white; text-decoration: none;\">Products</a></li>\r\n");
      out.write("            \r\n");
      out.write("            ");
 if (headerUser != null) { 
      out.write("\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><span style=\"color: white;\">Welcome, ");
      out.print( headerUser.getFirstName() );
      out.write("</span></li>\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"LogoutServlet\" style=\"color: white; text-decoration: none;\">Logout</a></li>\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"account.jsp\" style=\"color: white; text-decoration: none;\">My Account</a></li>\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"login.jsp\" style=\"color: white; text-decoration: none;\">Login</a></li>\r\n");
      out.write("                <li style=\"margin-left: 20px;\"><a href=\"register.jsp\" style=\"color: white; text-decoration: none;\">Register</a></li>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <li style=\"margin-left: 20px;\"><a href=\"cart.jsp\" style=\"color: white; text-decoration: none;\">Cart</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");

            // Check if user is logged in, redirect to login if not
            User user = (User) session.getAttribute("user");
            if (user == null) {
                response.sendRedirect("login.jsp");
                return;
            }
            
            // Get search parameters and results
            String shipmentIdStr = (String) request.getAttribute("shipmentId");
            String startDateStr = (String) request.getAttribute("startDate");
            String endDateStr = (String) request.getAttribute("endDate");
            List<Shipment> shipments = (List<Shipment>) request.getAttribute("shipments");
            
            // Get any error message
            String errorMessage = (String) request.getAttribute("errorMessage");
            
            // Format for displaying dates
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            SimpleDateFormat inputDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <main>\r\n");
      out.write("            <div class=\"search-container\">\r\n");
      out.write("                <h2>Search Shipments</h2>\r\n");
      out.write("                \r\n");
      out.write("                <form action=\"ShipmentSearchServlet\" method=\"get\">\r\n");
      out.write("                    <div class=\"form-row\">\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                            <label for=\"shipmentId\">Shipment ID</label>\r\n");
      out.write("                            <input type=\"number\" id=\"shipmentId\" name=\"shipmentId\" \r\n");
      out.write("                                value=\"");
      out.print( request.getAttribute("shipmentId") != null ? request.getAttribute("shipmentId") : "" );
      out.write("\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                            <label for=\"startDate\">Creation Date</label>\r\n");
      out.write("                            <input type=\"date\" id=\"startDate\" name=\"startDate\" \r\n");
      out.write("                                value=\"");
      out.print( request.getAttribute("startDate") != null ? request.getAttribute("startDate") : "" );
      out.write("\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"form-actions\">\r\n");
      out.write("                        <button type=\"submit\" class=\"btn\">Search</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            ");
 if (shipments != null) { 
      out.write("\r\n");
      out.write("                <div class=\"results-container\">\r\n");
      out.write("                    <div class=\"results-header\">\r\n");
      out.write("                        <h2>Search Results</h2>\r\n");
      out.write("                        <span>");
      out.print( shipments.size() );
      out.write(" shipment(s) found</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    ");
 if (shipments.isEmpty()) { 
      out.write("\r\n");
      out.write("                        <div class=\"empty-results\">\r\n");
      out.write("                            <h3>No shipments found</h3>\r\n");
      out.write("                            <p>Try adjusting your search criteria.</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");
 } else { 
      out.write("\r\n");
      out.write("                        <table class=\"shipment-table\">\r\n");
      out.write("                            <thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>ID</th>\r\n");
      out.write("                                    <th>Order ID</th>\r\n");
      out.write("                                    <th>Method</th>\r\n");
      out.write("                                    <th>Address</th>\r\n");
      out.write("                                    <th>Status</th>\r\n");
      out.write("                                    <th>Created</th>\r\n");
      out.write("                                    <th>Actions</th>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </thead>\r\n");
      out.write("                            <tbody>\r\n");
      out.write("                                ");
 for (Shipment shipment : shipments) { 
      out.write("\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <td>");
      out.print( shipment.getShipmentID() );
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print( shipment.getOrderID() );
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print( shipment.getShipmentMethod() );
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print( shipment.getStreetAddress() + ", " + shipment.getCity() );
      out.write("</td>\r\n");
      out.write("                                        <td>\r\n");
      out.write("                                            <span class=\"status-badge status-");
      out.print( shipment.getStatus().toLowerCase() );
      out.write("\">\r\n");
      out.write("                                                ");
      out.print( shipment.getStatus() );
      out.write("\r\n");
      out.write("                                            </span>\r\n");
      out.write("                                        </td>\r\n");
      out.write("                                        <td>\r\n");
      out.write("                                            ");
 if (shipment.getCreatedDate() != null) { 
      out.write("\r\n");
      out.write("                                                ");
      out.print( dateFormat.format(shipment.getCreatedDate()) );
      out.write("\r\n");
      out.write("                                            ");
 } else { 
      out.write("\r\n");
      out.write("                                                Not available\r\n");
      out.write("                                            ");
 } 
      out.write("\r\n");
      out.write("                                        </td>\r\n");
      out.write("                                        <td>\r\n");
      out.write("                                            <a href=\"ShipmentServlet?action=view&id=");
      out.print( shipment.getShipmentID() );
      out.write("\" class=\"btn btn-sm\">View</a>\r\n");
      out.write("                                        </td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                ");
 } 
      out.write("\r\n");
      out.write("                            </tbody>\r\n");
      out.write("                        </table>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </main>\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\n");
      out.write("<footer>\n");
      out.write("    <div class=\"footer-content\">\n");
      out.write("        &copy; 2025 IoTBay. All rights reserved. | <a href=\"https://github.com/xJessD/iotbay\">GitHub Project Repo</a>             \n");
      out.write("    </div>\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
